{
  "contractName": "Fundraiser",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_website",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_imageURL",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "address payable",
          "name": "_beneficiary",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_custodian",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "donor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "DonationReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "beneficiary",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "description",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "donationsCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "imageURL",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalDonations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "website",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "setBeneficiary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "myDonationsCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "donate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "myDonations",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "conversionFactor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "internalType": "struct Fundraiser.Donation[]",
          "name": "donations",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_website\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_imageURL\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"address payable\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_custodian\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"donor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"DonationReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donationsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"imageURL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myDonations\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"conversionFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"internalType\":\"struct Fundraiser.Donation[]\",\"name\":\"donations\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myDonationsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"setBeneficiary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDonations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"website\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Notes :  1. as best practice separate deposit and withdraw actions 2. When testing a function thet has permissions, should test for when  the test condition is met and when it fails. 3. test if an event is emmited\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/wissal/Documents/dev-workspace/solidity/handsOnSmartContracts/fundraiser2/contracts/Fundraiser.sol\":\"Fundraiser\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/wissal/Documents/dev-workspace/solidity/handsOnSmartContracts/fundraiser2/contracts/Fundraiser.sol\":{\"keccak256\":\"0xe0a04139c244a2af4eaccd10c0f735297226d6b7a835a03c1df3112744bc8fff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dfc087ba8e9fd336669127a1f7f6f24744e2e4c81013c917be198b5ad2baf41e\",\"dweb:/ipfs/QmPZAkpFtqyr4qB6jF6LkspbAzbtV1PtAeeiiYWYFKjhNb\"]},\"/home/wissal/Documents/dev-workspace/solidity/handsOnSmartContracts/fundraiser2/node_modules/@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x910a2e625b71168563edf9eeef55a50d6d699acfe27ceba3921f291829a8f938\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://248246ac66e6479dce1ad7d4945ec5540c98ceb09881e93c93f7c48d5772925c\",\"dweb:/ipfs/QmXr8tmUiZgEYid6ixeeBRmTdUnASWjKzhP3KRxMPy8fRt\"]},\"/home/wissal/Documents/dev-workspace/solidity/handsOnSmartContracts/fundraiser2/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x74b0525c81e47810f1bd795755962bdb84de3a4f71cfcb063f4c4d4999a3e96b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1cd0b71a794900681c8bcc255599fac53c211fc6a530a58d7dd7246bfde6c4f5\",\"dweb:/ipfs/QmdAB1mFyuN2i25DRf9szWgp1FLCByqJ4F8aYzXWe3mfTR\"]},\"/home/wissal/Documents/dev-workspace/solidity/handsOnSmartContracts/fundraiser2/node_modules/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xba96bc371ba999f452985a98717cca1e4c4abb598dc038a9a9c3db08129b1ba4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e50e3f7b6482fb6f598f2e006994a74aa492687daa4b3eee7fd4fb5398ce7f\",\"dweb:/ipfs/QmZudqoPSkA4USLMFsBBmt19dDPZFS8aaAmL5R7pECXu6t\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001a1538038062001a15833981810160405281019062000037919062000507565b600062000049620001a960201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3508560029080519060200190620000ff929190620003c7565b50846003908051906020019062000118929190620003c7565b50836004908051906020019062000131929190620003c7565b5082600590805190602001906200014a929190620003c7565b5081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200019d81620001b160201b60201c565b5050505050506200071c565b600033905090565b620001c1620001a960201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161462000282576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200030a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180620019ef6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620003ff57600085556200044b565b82601f106200041a57805160ff19168380011785556200044b565b828001600101855582156200044b579182015b828111156200044a5782518255916020019190600101906200042d565b5b5090506200045a91906200045e565b5090565b5b80821115620004795760008160009055506001016200045f565b5090565b6000815190506200048e81620006e8565b92915050565b600081519050620004a58162000702565b92915050565b600082601f830112620004bd57600080fd5b8151620004d4620004ce8262000635565b62000601565b91508082526020830160208301858383011115620004f157600080fd5b620004fe838284620006b0565b50505092915050565b60008060008060008060c087890312156200052157600080fd5b600087015167ffffffffffffffff8111156200053c57600080fd5b6200054a89828a01620004ab565b965050602087015167ffffffffffffffff8111156200056857600080fd5b6200057689828a01620004ab565b955050604087015167ffffffffffffffff8111156200059457600080fd5b620005a289828a01620004ab565b945050606087015167ffffffffffffffff811115620005c057600080fd5b620005ce89828a01620004ab565b9350506080620005e189828a0162000494565b92505060a0620005f489828a016200047d565b9150509295509295509295565b6000604051905081810181811067ffffffffffffffff821117156200062b576200062a620006e6565b5b8060405250919050565b600067ffffffffffffffff821115620006535762000652620006e6565b5b601f19601f8301169050602081019050919050565b6000620006758262000690565b9050919050565b6000620006898262000690565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b83811015620006d0578082015181840152602081019050620006b3565b83811115620006e0576000848401525b50505050565bfe5b620006f38162000668565b8114620006ff57600080fd5b50565b6200070d816200067c565b81146200071957600080fd5b50565b6112c3806200072c6000396000f3fe6080604052600436106100ec5760003560e01c8063715018a61161008a578063beb0a41611610059578063beb0a416146102c9578063de2ed893146102f4578063ed88c68e1461031f578063f2fde38b1461032957610115565b8063715018a6146102315780637284e416146102485780638da5cb5b14610273578063b90497e01461029e57610115565b80631c31f710116100c65780631c31f7101461019b5780631f522595146101c457806338af3eed146101ef5780633ccfd60b1461021a57610115565b80630180b97c1461011a57806306fdde03146101455780631a57f7b41461017057610115565b366101155734600760008282540192505081905550600860008154809291906001019190505550005b600080fd5b34801561012657600080fd5b5061012f610352565b60405161013c9190611137565b60405180910390f35b34801561015157600080fd5b5061015a61039c565b6040516101679190611115565b60405180910390f35b34801561017c57600080fd5b5061018561043a565b60405161019291906110f3565b60405180910390f35b3480156101a757600080fd5b506101c260048036038101906101bd9190610f67565b6104f4565b005b3480156101d057600080fd5b506101d9610600565b6040516101e69190611137565b60405180910390f35b3480156101fb57600080fd5b50610204610606565b60405161021191906110d8565b60405180910390f35b34801561022657600080fd5b5061022f61062c565b005b34801561023d57600080fd5b5061024661079c565b005b34801561025457600080fd5b5061025d610922565b60405161026a9190611115565b60405180910390f35b34801561027f57600080fd5b506102886109c0565b60405161029591906110bd565b60405180910390f35b3480156102aa57600080fd5b506102b36109e9565b6040516102c09190611115565b60405180910390f35b3480156102d557600080fd5b506102de610a87565b6040516102eb9190611115565b60405180910390f35b34801561030057600080fd5b50610309610b25565b6040516103169190611137565b60405180910390f35b610327610b2b565b005b34801561033557600080fd5b50610350600480360381019061034b9190610f3e565b610c58565b005b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905090565b60028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104325780601f1061040757610100808354040283529160200191610432565b820191906000526020600020905b81548152906001019060200180831161041557829003601f168201915b505050505081565b6060600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156104eb578382906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820154815250508152602001906001019061049b565b50505050905090565b6104fc610e63565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60085481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610634610e63565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000479050600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610761573d6000803e3d6000fd5b507f5b6b431d4476a211bb7d41c20d1aab9ae2321deee0d20be3d9fc9b1093fa6e3d816040516107919190611137565b60405180910390a150565b6107a4610e63565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610864576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109b85780601f1061098d576101008083540402835291602001916109b8565b820191906000526020600020905b81548152906001019060200180831161099b57829003601f168201915b505050505081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a7f5780601f10610a5457610100808354040283529160200191610a7f565b820191906000526020600020905b815481529060010190602001808311610a6257829003601f168201915b505050505081565b60038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b1d5780601f10610af257610100808354040283529160200191610b1d565b820191906000526020600020905b815481529060010190602001808311610b0057829003601f168201915b505050505081565b60075481565b610b33610ef3565b604051806060016040528034815260200160028152602001428152509050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600302016000909190919091506000820151816000015560208201518160010155604082015181600201555050610bef34600754610e6b90919063ffffffff16565b6007819055506008600081548092919060010191905055503373ffffffffffffffffffffffffffffffffffffffff167f264f630d9efa0d07053a31163641d9fcc0adafc9d9e76f1c37c2ce3a558d2c5234604051610c4d9190611137565b60405180910390a250565b610c60610e63565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d20576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610da6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806112686026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600080828401905083811015610ee9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60405180606001604052806000815260200160008152602001600081525090565b600081359050610f2381611239565b92915050565b600081359050610f3881611250565b92915050565b600060208284031215610f5057600080fd5b6000610f5e84828501610f14565b91505092915050565b600060208284031215610f7957600080fd5b6000610f8784828501610f29565b91505092915050565b6000610f9c838361105d565b60608301905092915050565b610fb1816111b9565b82525050565b610fc0816111a7565b82525050565b6000610fd182611162565b610fdb8185611185565b9350610fe683611152565b8060005b83811015611017578151610ffe8882610f90565b975061100983611178565b925050600181019050610fea565b5085935050505092915050565b600061102f8261116d565b6110398185611196565b93506110498185602086016111f5565b61105281611228565b840191505092915050565b606082016000820151611073600085018261109f565b506020820151611086602085018261109f565b506040820151611099604085018261109f565b50505050565b6110a8816111eb565b82525050565b6110b7816111eb565b82525050565b60006020820190506110d26000830184610fb7565b92915050565b60006020820190506110ed6000830184610fa8565b92915050565b6000602082019050818103600083015261110d8184610fc6565b905092915050565b6000602082019050818103600083015261112f8184611024565b905092915050565b600060208201905061114c60008301846110ae565b92915050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006111b2826111cb565b9050919050565b60006111c4826111cb565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156112135780820151818401526020810190506111f8565b83811115611222576000848401525b50505050565b6000601f19601f8301169050919050565b611242816111a7565b811461124d57600080fd5b50565b611259816111b9565b811461126457600080fd5b5056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a264697066735822122051e3b487bbc06009a64fad4069293d280f4737ca646faadd45e45ea37804e38564736f6c634300070400334f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
  "deployedBytecode": "0x6080604052600436106100ec5760003560e01c8063715018a61161008a578063beb0a41611610059578063beb0a416146102c9578063de2ed893146102f4578063ed88c68e1461031f578063f2fde38b1461032957610115565b8063715018a6146102315780637284e416146102485780638da5cb5b14610273578063b90497e01461029e57610115565b80631c31f710116100c65780631c31f7101461019b5780631f522595146101c457806338af3eed146101ef5780633ccfd60b1461021a57610115565b80630180b97c1461011a57806306fdde03146101455780631a57f7b41461017057610115565b366101155734600760008282540192505081905550600860008154809291906001019190505550005b600080fd5b34801561012657600080fd5b5061012f610352565b60405161013c9190611137565b60405180910390f35b34801561015157600080fd5b5061015a61039c565b6040516101679190611115565b60405180910390f35b34801561017c57600080fd5b5061018561043a565b60405161019291906110f3565b60405180910390f35b3480156101a757600080fd5b506101c260048036038101906101bd9190610f67565b6104f4565b005b3480156101d057600080fd5b506101d9610600565b6040516101e69190611137565b60405180910390f35b3480156101fb57600080fd5b50610204610606565b60405161021191906110d8565b60405180910390f35b34801561022657600080fd5b5061022f61062c565b005b34801561023d57600080fd5b5061024661079c565b005b34801561025457600080fd5b5061025d610922565b60405161026a9190611115565b60405180910390f35b34801561027f57600080fd5b506102886109c0565b60405161029591906110bd565b60405180910390f35b3480156102aa57600080fd5b506102b36109e9565b6040516102c09190611115565b60405180910390f35b3480156102d557600080fd5b506102de610a87565b6040516102eb9190611115565b60405180910390f35b34801561030057600080fd5b50610309610b25565b6040516103169190611137565b60405180910390f35b610327610b2b565b005b34801561033557600080fd5b50610350600480360381019061034b9190610f3e565b610c58565b005b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905090565b60028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104325780601f1061040757610100808354040283529160200191610432565b820191906000526020600020905b81548152906001019060200180831161041557829003601f168201915b505050505081565b6060600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156104eb578382906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820154815250508152602001906001019061049b565b50505050905090565b6104fc610e63565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60085481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610634610e63565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000479050600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610761573d6000803e3d6000fd5b507f5b6b431d4476a211bb7d41c20d1aab9ae2321deee0d20be3d9fc9b1093fa6e3d816040516107919190611137565b60405180910390a150565b6107a4610e63565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610864576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109b85780601f1061098d576101008083540402835291602001916109b8565b820191906000526020600020905b81548152906001019060200180831161099b57829003601f168201915b505050505081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a7f5780601f10610a5457610100808354040283529160200191610a7f565b820191906000526020600020905b815481529060010190602001808311610a6257829003601f168201915b505050505081565b60038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b1d5780601f10610af257610100808354040283529160200191610b1d565b820191906000526020600020905b815481529060010190602001808311610b0057829003601f168201915b505050505081565b60075481565b610b33610ef3565b604051806060016040528034815260200160028152602001428152509050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600302016000909190919091506000820151816000015560208201518160010155604082015181600201555050610bef34600754610e6b90919063ffffffff16565b6007819055506008600081548092919060010191905055503373ffffffffffffffffffffffffffffffffffffffff167f264f630d9efa0d07053a31163641d9fcc0adafc9d9e76f1c37c2ce3a558d2c5234604051610c4d9190611137565b60405180910390a250565b610c60610e63565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d20576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610da6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806112686026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600080828401905083811015610ee9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60405180606001604052806000815260200160008152602001600081525090565b600081359050610f2381611239565b92915050565b600081359050610f3881611250565b92915050565b600060208284031215610f5057600080fd5b6000610f5e84828501610f14565b91505092915050565b600060208284031215610f7957600080fd5b6000610f8784828501610f29565b91505092915050565b6000610f9c838361105d565b60608301905092915050565b610fb1816111b9565b82525050565b610fc0816111a7565b82525050565b6000610fd182611162565b610fdb8185611185565b9350610fe683611152565b8060005b83811015611017578151610ffe8882610f90565b975061100983611178565b925050600181019050610fea565b5085935050505092915050565b600061102f8261116d565b6110398185611196565b93506110498185602086016111f5565b61105281611228565b840191505092915050565b606082016000820151611073600085018261109f565b506020820151611086602085018261109f565b506040820151611099604085018261109f565b50505050565b6110a8816111eb565b82525050565b6110b7816111eb565b82525050565b60006020820190506110d26000830184610fb7565b92915050565b60006020820190506110ed6000830184610fa8565b92915050565b6000602082019050818103600083015261110d8184610fc6565b905092915050565b6000602082019050818103600083015261112f8184611024565b905092915050565b600060208201905061114c60008301846110ae565b92915050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006111b2826111cb565b9050919050565b60006111c4826111cb565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156112135780820151818401526020810190506111f8565b83811115611222576000848401525b50505050565b6000601f19601f8301169050919050565b611242816111a7565b811461124d57600080fd5b50565b611259816111b9565b811461126457600080fd5b5056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a264697066735822122051e3b487bbc06009a64fad4069293d280f4737ca646faadd45e45ea37804e38564736f6c63430007040033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3893:6",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "70:80:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "80:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "89:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:13:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "80:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "138:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "111:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "111:33:6"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "48:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "56:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:6",
                "type": ""
              }
            ],
            "src": "7:143:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "227:88:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "237:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "252:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "246:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "246:13:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "237:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "303:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "268:34:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "268:41:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "268:41:6"
                }
              ]
            },
            "name": "abi_decode_t_address_payable_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "205:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "213:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "221:5:6",
                "type": ""
              }
            ],
            "src": "156:159:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "394:395:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "443:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "452:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "455:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "445:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "445:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "445:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "422:6:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "430:4:6",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "418:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "418:17:6"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "437:3:6"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "414:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "414:27:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "407:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "407:35:6"
                  },
                  "nodeType": "YulIf",
                  "src": "404:2:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "468:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "488:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "482:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "482:13:6"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "472:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "504:74:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "570:6:6"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "528:41:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "528:49:6"
                      }
                    ],
                    "functionName": {
                      "name": "allocateMemory",
                      "nodeType": "YulIdentifier",
                      "src": "513:14:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "513:65:6"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "504:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "594:5:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "601:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "587:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "587:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "587:21:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "617:28:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "632:6:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "640:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "628:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "628:17:6"
                  },
                  "variables": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "621:3:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "654:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "669:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "676:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "665:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "665:16:6"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "658:3:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "719:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "728:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "731:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "721:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "721:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "721:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "700:3:6"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "705:6:6"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "696:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "696:16:6"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "714:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "693:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "693:25:6"
                  },
                  "nodeType": "YulIf",
                  "src": "690:2:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "766:3:6"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "771:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "776:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "744:21:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "744:39:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "744:39:6"
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "372:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "380:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "388:5:6",
                "type": ""
              }
            ],
            "src": "321:468:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1005:1285:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1052:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1061:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1064:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1054:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1054:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1054:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1026:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1035:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1022:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1022:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1047:3:6",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1018:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1018:33:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1015:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1078:222:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1092:38:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1116:9:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1127:1:6",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1112:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1112:17:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1106:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1106:24:6"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1096:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1177:16:6",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1186:1:6",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1189:1:6",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1179:6:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1179:12:6"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1179:12:6"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1149:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1157:18:6",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1146:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1146:30:6"
                      },
                      "nodeType": "YulIf",
                      "src": "1143:2:6"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1206:84:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1262:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1273:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1258:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1258:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1282:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1216:41:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1216:74:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1206:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1310:223:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1324:39:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1348:9:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1359:2:6",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1344:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1344:18:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1338:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1338:25:6"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1328:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1410:16:6",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1419:1:6",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1422:1:6",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1412:6:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1412:12:6"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1412:12:6"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1382:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1390:18:6",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1379:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1379:30:6"
                      },
                      "nodeType": "YulIf",
                      "src": "1376:2:6"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1439:84:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1495:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1506:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1491:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1491:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1515:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1449:41:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1449:74:6"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1439:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1543:223:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1557:39:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1581:9:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1592:2:6",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1577:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1577:18:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1571:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1571:25:6"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1561:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1643:16:6",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1652:1:6",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1655:1:6",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1645:6:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1645:12:6"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1645:12:6"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1615:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1623:18:6",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1612:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1612:30:6"
                      },
                      "nodeType": "YulIf",
                      "src": "1609:2:6"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1672:84:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1728:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1739:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1724:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1724:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1748:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1682:41:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1682:74:6"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "1672:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1776:223:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1790:39:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1814:9:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1825:2:6",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1810:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1810:18:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1804:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1804:25:6"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1794:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1876:16:6",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1885:1:6",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1888:1:6",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1878:6:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1878:12:6"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1878:12:6"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1848:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1856:18:6",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1845:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1845:30:6"
                      },
                      "nodeType": "YulIf",
                      "src": "1842:2:6"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1905:84:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1961:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1972:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1957:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1957:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1981:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1915:41:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1915:74:6"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "1905:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2009:136:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2023:17:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2037:3:6",
                        "type": "",
                        "value": "128"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2027:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2053:82:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2107:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2118:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2103:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2103:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2127:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_payable_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2063:39:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2063:72:6"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "2053:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2155:128:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2169:17:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2183:3:6",
                        "type": "",
                        "value": "160"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2173:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2199:74:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2245:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2256:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2241:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2241:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2265:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2209:31:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2209:64:6"
                      },
                      "variableNames": [
                        {
                          "name": "value5",
                          "nodeType": "YulIdentifier",
                          "src": "2199:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_address_payablet_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "935:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "946:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "958:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "966:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "974:6:6",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "982:6:6",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "990:6:6",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "998:6:6",
                "type": ""
              }
            ],
            "src": "795:1495:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2336:238:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2346:19:6",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2362:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2356:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2356:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "2346:6:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2374:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2396:6:6"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "2404:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2392:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2392:17:6"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "2378:10:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2520:17:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error",
                            "nodeType": "YulIdentifier",
                            "src": "2522:11:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2522:13:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2522:13:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2463:10:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2475:18:6",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2460:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2460:34:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2499:10:6"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2511:6:6"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2496:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2496:22:6"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "2457:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2457:62:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2454:2:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2553:2:6",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "2557:10:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2546:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2546:22:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2546:22:6"
                }
              ]
            },
            "name": "allocateMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "2320:4:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2329:6:6",
                "type": ""
              }
            ],
            "src": "2296:278:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2647:260:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2752:17:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error",
                            "nodeType": "YulIdentifier",
                            "src": "2754:11:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2754:13:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2754:13:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2724:6:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2732:18:6",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2721:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2721:30:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2718:2:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2799:41:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2815:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2823:4:6",
                            "type": "",
                            "value": "0x1f"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2811:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2811:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2834:4:6",
                            "type": "",
                            "value": "0x1f"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "2830:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2830:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2807:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2807:33:6"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "2799:4:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2877:23:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "2889:4:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2895:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2885:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2885:15:6"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "2877:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2631:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "2642:4:6",
                "type": ""
              }
            ],
            "src": "2580:327:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2958:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2968:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2997:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2979:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2979:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2968:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2940:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2950:7:6",
                "type": ""
              }
            ],
            "src": "2913:96:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3068:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3078:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3107:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3089:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3089:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3078:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3050:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3060:7:6",
                "type": ""
              }
            ],
            "src": "3015:104:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3170:81:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3180:65:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3195:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3202:42:6",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3191:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3191:54:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3180:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3152:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3162:7:6",
                "type": ""
              }
            ],
            "src": "3125:126:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3306:258:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3316:10:6",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3325:1:6",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "3320:1:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3385:63:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "3410:3:6"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "3415:1:6"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3406:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3406:11:6"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "3429:3:6"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "3434:1:6"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3425:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3425:11:6"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3419:5:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3419:18:6"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3399:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3399:39:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3399:39:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3346:1:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3349:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3343:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3343:13:6"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "3357:19:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3359:15:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "3368:1:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3371:2:6",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3364:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3364:10:6"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3359:1:6"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "3339:3:6",
                    "statements": []
                  },
                  "src": "3335:113:6"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3482:76:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "3532:3:6"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "3537:6:6"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3528:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3528:16:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3546:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3521:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3521:27:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3521:27:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3463:1:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3466:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3460:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3460:13:6"
                  },
                  "nodeType": "YulIf",
                  "src": "3457:2:6"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "3288:3:6",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "3293:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3298:6:6",
                "type": ""
              }
            ],
            "src": "3257:307:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3593:25:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "functionName": {
                      "name": "invalid",
                      "nodeType": "YulIdentifier",
                      "src": "3603:7:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3603:9:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3603:9:6"
                }
              ]
            },
            "name": "panic_error",
            "nodeType": "YulFunctionDefinition",
            "src": "3570:48:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3667:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3724:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3733:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3736:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3726:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3726:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3726:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3690:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3715:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "3697:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3697:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3687:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3687:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3680:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3680:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "3677:2:6"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3660:5:6",
                "type": ""
              }
            ],
            "src": "3624:122:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3803:87:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3868:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3877:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3880:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3870:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3870:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3870:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3826:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3859:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address_payable",
                              "nodeType": "YulIdentifier",
                              "src": "3833:25:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3833:32:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3823:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3823:43:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3816:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3816:51:6"
                  },
                  "nodeType": "YulIf",
                  "src": "3813:2:6"
                }
              ]
            },
            "name": "validator_revert_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3796:5:6",
                "type": ""
              }
            ],
            "src": "3752:138:6"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := allocateMemory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let src := add(offset, 0x20)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_address_payablet_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n\n        {\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n            let offset := mload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n            value3 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n            let offset := 128\n            value4 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n            let offset := 160\n            value5 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error() {\n        invalid()\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7342:6",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:6"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:6",
                "type": ""
              }
            ],
            "src": "7:139:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "212:95:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "222:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "244:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "231:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "222:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "295:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "260:34:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "260:41:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "260:41:6"
                }
              ]
            },
            "name": "abi_decode_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "190:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "198:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "206:5:6",
                "type": ""
              }
            ],
            "src": "152:155:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:194:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "425:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "434:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "437:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "427:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "427:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "427:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "400:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "409:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "396:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "396:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "421:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "392:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "392:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "389:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "451:115:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "465:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "479:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "469:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "493:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "528:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "539:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "524:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "524:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "548:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "503:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "503:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "493:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "349:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "360:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "372:6:6",
                "type": ""
              }
            ],
            "src": "313:260:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "653:202:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "699:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "708:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "711:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "701:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "701:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "701:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "674:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "683:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "670:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "670:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "695:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "666:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "666:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "663:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "725:123:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "739:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "753:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "743:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "767:71:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "810:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "821:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "806:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "806:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "830:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "777:28:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "777:61:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "767:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "623:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "634:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "646:6:6",
                "type": ""
              }
            ],
            "src": "579:276:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "989:147:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1081:6:6"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1089:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_Donation_$17_memory_ptr_to_t_struct$_Donation_$17_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "999:81:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "999:94:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "999:94:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1102:28:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1120:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1125:4:6",
                        "type": "",
                        "value": "0x60"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1116:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1116:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "1102:10:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_struct$_Donation_$17_memory_ptr_to_t_struct$_Donation_$17_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "962:6:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "970:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "978:10:6",
                "type": ""
              }
            ],
            "src": "861:275:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1223:61:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1240:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1271:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "1245:25:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1245:32:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1233:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1233:45:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1233:45:6"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1211:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1218:3:6",
                "type": ""
              }
            ],
            "src": "1142:142:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1355:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1372:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1395:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1377:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1377:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1365:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1365:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1365:37:6"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1343:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1350:3:6",
                "type": ""
              }
            ],
            "src": "1290:118:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1654:752:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1664:92:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1750:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_struct$_Donation_$17_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "1678:71:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1678:78:6"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1668:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1765:117:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1870:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1875:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_struct$_Donation_$17_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1772:97:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1772:110:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1765:3:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1891:95:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1980:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_struct$_Donation_$17_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "1906:73:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1906:80:6"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "1895:7:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1995:21:6",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "2009:7:6"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "1999:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2085:296:6",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2099:34:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "2126:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "2120:5:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2120:13:6"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "2103:13:6",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2146:118:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "2245:13:6"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "2260:3:6"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_struct$_Donation_$17_memory_ptr_to_t_struct$_Donation_$17_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "2153:91:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2153:111:6"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2146:3:6"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2277:94:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "2364:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_struct$_Donation_$17_memory_ptr_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "2287:76:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2287:84:6"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2277:6:6"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2047:1:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2050:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2044:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2044:13:6"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2058:18:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2060:14:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2069:1:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2072:1:6",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2065:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2065:9:6"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2060:1:6"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2029:14:6",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2031:10:6",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2040:1:6",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "2035:1:6",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "2025:356:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2390:10:6",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "2397:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2390:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_struct$_Donation_$17_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Donation_$17_memory_ptr_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1633:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1640:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1649:3:6",
                "type": ""
              }
            ],
            "src": "1482:924:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2504:272:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2514:53:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2561:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "2528:32:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2528:39:6"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2518:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2576:78:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2642:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2647:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2583:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2583:71:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2576:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2689:5:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2696:4:6",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2685:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2685:16:6"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2703:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2708:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2663:21:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2663:52:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2663:52:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2724:46:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2735:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2762:6:6"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "2740:21:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2740:29:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2731:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2731:39:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2724:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2485:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2492:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2500:3:6",
                "type": ""
              }
            ],
            "src": "2412:364:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2950:578:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2960:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2976:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2981:4:6",
                        "type": "",
                        "value": "0x60"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2972:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2972:14:6"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "2964:4:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2996:165:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3032:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3062:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3069:4:6",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3058:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3058:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3052:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3052:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "3036:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "3122:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3140:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3145:4:6",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3136:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3136:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3088:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3088:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3088:63:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3171:176:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3218:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3248:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3255:4:6",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3244:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3244:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3238:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3238:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "3222:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "3308:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3326:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3331:4:6",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3322:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3322:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3274:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3274:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3274:63:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3357:164:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3392:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3422:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3429:4:6",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3418:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3418:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3412:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3412:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "3396:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "3482:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3500:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3505:4:6",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3496:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3496:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3448:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3448:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3448:63:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_Donation_$17_memory_ptr_to_t_struct$_Donation_$17_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2937:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2944:3:6",
                "type": ""
              }
            ],
            "src": "2846:682:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3589:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3606:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3629:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3611:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3611:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3599:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3599:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3599:37:6"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3577:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3584:3:6",
                "type": ""
              }
            ],
            "src": "3534:108:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3713:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3730:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3753:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3735:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3735:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3723:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3723:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3723:37:6"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3701:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3708:3:6",
                "type": ""
              }
            ],
            "src": "3648:118:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3870:124:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3880:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3892:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3903:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3888:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3888:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3880:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3960:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3973:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3984:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3969:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3969:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3916:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3916:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3916:71:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3842:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3854:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3865:4:6",
                "type": ""
              }
            ],
            "src": "3772:222:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4114:140:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4124:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4136:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4147:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4132:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4132:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4124:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4220:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4233:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4244:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4229:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4229:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4160:59:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4160:87:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4160:87:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4086:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4098:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4109:4:6",
                "type": ""
              }
            ],
            "src": "4000:254:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4456:273:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4466:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4478:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4489:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4474:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4474:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4466:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4513:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4524:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4509:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4509:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4532:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4538:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4528:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4528:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4502:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4502:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4502:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4558:164:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4708:6:6"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4717:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_struct$_Donation_$17_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Donation_$17_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4566:141:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4566:156:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4558:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_struct$_Donation_$17_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Donation_$17_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4428:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4440:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4451:4:6",
                "type": ""
              }
            ],
            "src": "4260:469:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4853:195:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4863:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4875:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4886:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4871:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4871:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4863:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4910:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4921:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4906:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4906:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4929:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4935:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4925:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4925:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4899:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4899:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4899:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4955:86:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5027:6:6"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5036:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4963:63:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4963:78:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4955:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4825:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4837:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4848:4:6",
                "type": ""
              }
            ],
            "src": "4735:313:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5152:124:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5162:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5174:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5185:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5170:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5170:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5162:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5242:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5255:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5266:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5251:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5251:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5198:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5198:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5198:71:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5124:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5136:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5147:4:6",
                "type": ""
              }
            ],
            "src": "5054:222:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5378:60:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5388:11:6",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "5396:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "5388:4:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5409:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "5421:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5426:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5417:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5417:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "5409:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_struct$_Donation_$17_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "5365:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "5373:4:6",
                "type": ""
              }
            ],
            "src": "5282:156:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5542:40:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5553:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5569:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5563:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5563:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "5553:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_struct$_Donation_$17_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5525:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5535:6:6",
                "type": ""
              }
            ],
            "src": "5444:138:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5647:40:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5658:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5674:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5668:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5668:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "5658:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5630:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5640:6:6",
                "type": ""
              }
            ],
            "src": "5588:99:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5792:38:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5802:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "5814:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5819:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5810:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5810:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "5802:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_struct$_Donation_$17_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "5779:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "5787:4:6",
                "type": ""
              }
            ],
            "src": "5693:137:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5971:73:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5988:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5993:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5981:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5981:19:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5981:19:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6009:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6028:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6033:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6024:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6024:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "6009:11:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_struct$_Donation_$17_memory_ptr_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5943:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5948:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "5959:11:6",
                "type": ""
              }
            ],
            "src": "5836:208:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6146:73:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6163:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6168:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6156:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6156:19:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6156:19:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6184:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6203:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6208:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6199:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6199:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "6184:11:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6118:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6123:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "6134:11:6",
                "type": ""
              }
            ],
            "src": "6050:169:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6270:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6280:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6309:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6291:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6291:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6280:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6252:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6262:7:6",
                "type": ""
              }
            ],
            "src": "6225:96:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6380:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6390:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6419:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6401:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6401:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6390:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6362:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6372:7:6",
                "type": ""
              }
            ],
            "src": "6327:104:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6482:81:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6492:65:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6507:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6514:42:6",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6503:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6503:54:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6492:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6464:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6474:7:6",
                "type": ""
              }
            ],
            "src": "6437:126:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6614:32:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6624:16:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6635:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6624:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6596:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6606:7:6",
                "type": ""
              }
            ],
            "src": "6569:77:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6701:258:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6711:10:6",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6720:1:6",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "6715:1:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6780:63:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "6805:3:6"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "6810:1:6"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6801:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6801:11:6"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "6824:3:6"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "6829:1:6"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6820:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6820:11:6"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "6814:5:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6814:18:6"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6794:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6794:39:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6794:39:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6741:1:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6744:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6738:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6738:13:6"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "6752:19:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6754:15:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "6763:1:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6766:2:6",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6759:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6759:10:6"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "6754:1:6"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "6734:3:6",
                    "statements": []
                  },
                  "src": "6730:113:6"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6877:76:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "6927:3:6"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "6932:6:6"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6923:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6923:16:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6941:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6916:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6916:27:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6916:27:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6858:1:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6861:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6855:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6855:13:6"
                  },
                  "nodeType": "YulIf",
                  "src": "6852:2:6"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "6683:3:6",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "6688:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6693:6:6",
                "type": ""
              }
            ],
            "src": "6652:307:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7013:54:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7023:38:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7041:5:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7048:2:6",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7037:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7037:14:6"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7057:2:6",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "7053:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7053:7:6"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7033:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7033:28:6"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "7023:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6996:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "7006:6:6",
                "type": ""
              }
            ],
            "src": "6965:102:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7116:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7173:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7182:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7185:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7175:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7175:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7175:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7139:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7164:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "7146:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7146:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "7136:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7136:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7129:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7129:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "7126:2:6"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7109:5:6",
                "type": ""
              }
            ],
            "src": "7073:122:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7252:87:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7317:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7326:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7329:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7319:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7319:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7319:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7275:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7308:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address_payable",
                              "nodeType": "YulIdentifier",
                              "src": "7282:25:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7282:32:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "7272:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7272:43:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7265:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7265:51:6"
                  },
                  "nodeType": "YulIf",
                  "src": "7262:2:6"
                }
              ]
            },
            "name": "validator_revert_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7245:5:6",
                "type": ""
              }
            ],
            "src": "7201:138:6"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n            let offset := 0\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n            let offset := 0\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Donation_$17_memory_ptr_to_t_struct$_Donation_$17_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_Donation_$17_memory_ptr_to_t_struct$_Donation_$17_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x60)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // struct Fundraiser.Donation[] -> struct Fundraiser.Donation[]\n    function abi_encode_t_array$_t_struct$_Donation_$17_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Donation_$17_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Donation_$17_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Donation_$17_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_Donation_$17_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_Donation_$17_memory_ptr_to_t_struct$_Donation_$17_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_Donation_$17_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    // struct Fundraiser.Donation -> struct Fundraiser.Donation\n    function abi_encode_t_struct$_Donation_$17_memory_ptr_to_t_struct$_Donation_$17_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x60)\n\n        {\n            // value\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // conversionFactor\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // date\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Donation_$17_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Donation_$17_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Donation_$17_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Donation_$17_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_dataslot_t_array$_t_struct$_Donation_$17_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_struct$_Donation_$17_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_struct$_Donation_$17_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Donation_$17_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "482:3636:0:-:0;;;1038:898;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;856:17:4;876:12;:10;;;:12;;:::i;:::-;856:32;;907:9;898:6;;:18;;;;;;;;;;;;;;;;;;964:9;931:43;;960:1;931:43;;;;;;;;;;;;831:150;1269:5:0;1262:4;:12;;;;;;;;;;;;:::i;:::-;;1294:8;1284:7;:18;;;;;;;;;;;;:::i;:::-;;1323:9;1312:8;:20;;;;;;;;;;;;:::i;:::-;;1356:12;1342:11;:26;;;;;;;;;;;;:::i;:::-;;1392:12;1378:11;;:26;;;;;;;;;;;;;;;;;;1900:29;1918:10;1900:17;;;:29;;:::i;:::-;1038:898;;;;;;482:3636;;590:104:3;643:15;677:10;670:17;;590:104;:::o;1974:240:4:-;1271:12;:10;;;:12;;:::i;:::-;1261:22;;:6;;;;;;;;;;:22;;;1253:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2082:1:::1;2062:22;;:8;:22;;;;2054:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2171:8;2142:38;;2163:6;::::0;::::1;;;;;;;;2142:38;;;;;;;;;;;;2199:8;2190:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;1974:240:::0;:::o;482:3636:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:143:6:-;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:159::-;;252:6;246:13;237:22;;268:41;303:5;268:41;:::i;:::-;227:88;;;;:::o;321:468::-;;437:3;430:4;422:6;418:17;414:27;404:2;;455:1;452;445:12;404:2;488:6;482:13;513:65;528:49;570:6;528:49;:::i;:::-;513:65;:::i;:::-;504:74;;601:6;594:5;587:21;640:4;632:6;628:17;676:4;669:5;665:16;714:3;705:6;700:3;696:16;693:25;690:2;;;731:1;728;721:12;690:2;744:39;776:6;771:3;766;744:39;:::i;:::-;394:395;;;;;;;:::o;795:1495::-;;;;;;;1047:3;1035:9;1026:7;1022:23;1018:33;1015:2;;;1064:1;1061;1054:12;1015:2;1127:1;1116:9;1112:17;1106:24;1157:18;1149:6;1146:30;1143:2;;;1189:1;1186;1179:12;1143:2;1216:74;1282:7;1273:6;1262:9;1258:22;1216:74;:::i;:::-;1206:84;;1078:222;1359:2;1348:9;1344:18;1338:25;1390:18;1382:6;1379:30;1376:2;;;1422:1;1419;1412:12;1376:2;1449:74;1515:7;1506:6;1495:9;1491:22;1449:74;:::i;:::-;1439:84;;1310:223;1592:2;1581:9;1577:18;1571:25;1623:18;1615:6;1612:30;1609:2;;;1655:1;1652;1645:12;1609:2;1682:74;1748:7;1739:6;1728:9;1724:22;1682:74;:::i;:::-;1672:84;;1543:223;1825:2;1814:9;1810:18;1804:25;1856:18;1848:6;1845:30;1842:2;;;1888:1;1885;1878:12;1842:2;1915:74;1981:7;1972:6;1961:9;1957:22;1915:74;:::i;:::-;1905:84;;1776:223;2037:3;2063:72;2127:7;2118:6;2107:9;2103:22;2063:72;:::i;:::-;2053:82;;2009:136;2183:3;2209:64;2265:7;2256:6;2245:9;2241:22;2209:64;:::i;:::-;2199:74;;2155:128;1005:1285;;;;;;;;:::o;2296:278::-;;2362:2;2356:9;2346:19;;2404:4;2396:6;2392:17;2511:6;2499:10;2496:22;2475:18;2463:10;2460:34;2457:62;2454:2;;;2522:13;;:::i;:::-;2454:2;2557:10;2553:2;2546:22;2336:238;;;;:::o;2580:327::-;;2732:18;2724:6;2721:30;2718:2;;;2754:13;;:::i;:::-;2718:2;2834:4;2830:9;2823:4;2815:6;2811:17;2807:33;2799:41;;2895:4;2889;2885:15;2877:23;;2647:260;;;:::o;2913:96::-;;2979:24;2997:5;2979:24;:::i;:::-;2968:35;;2958:51;;;:::o;3015:104::-;;3089:24;3107:5;3089:24;:::i;:::-;3078:35;;3068:51;;;:::o;3125:126::-;;3202:42;3195:5;3191:54;3180:65;;3170:81;;;:::o;3257:307::-;3325:1;3335:113;3349:6;3346:1;3343:13;3335:113;;;3434:1;3429:3;3425:11;3419:18;3415:1;3410:3;3406:11;3399:39;3371:2;3368:1;3364:10;3359:15;;3335:113;;;3466:6;3463:1;3460:13;3457:2;;;3546:1;3537:6;3532:3;3528:16;3521:27;3457:2;3306:258;;;;:::o;3570:48::-;3603:9;3624:122;3697:24;3715:5;3697:24;:::i;:::-;3690:5;3687:35;3677:2;;3736:1;3733;3726:12;3677:2;3667:79;:::o;3752:138::-;3833:32;3859:5;3833:32;:::i;:::-;3826:5;3823:43;3813:2;;3880:1;3877;3870:12;3813:2;3803:87;:::o;482:3636:0:-;;;;;;;",
  "deployedSourceMap": "482:3636:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4074:9;4056:14;;:27;;;;;;;;;;;4093:14;;:16;;;;;;;;;;;;;482:3636;;;;;2236:111;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;817:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3465:121;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2116:114;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1002:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;927:34;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3592:164;;;;;;;;;;;;;:::i;:::-;;1680:145:4;;;;;;;;;;;;;:::i;:::-;;896:25:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1057:77:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;868:22:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;841:21;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;967:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2353:567;;;:::i;:::-;;1974:240:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2236:111:0;2285:7;2311:10;:22;2322:10;2311:22;;;;;;;;;;;;;;;:29;;;;2304:36;;2236:111;:::o;817:18::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3465:121::-;3511:27;3557:10;:22;3568:10;3557:22;;;;;;;;;;;;;;;3550:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3465:121;:::o;2116:114::-;1271:12:4;:10;:12::i;:::-;1261:22;;:6;;;;;;;;;;:22;;;1253:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2211:12:0::1;2197:11;;:26;;;;;;;;;;;;;;;;;;2116:114:::0;:::o;1002:29::-;;;;:::o;927:34::-;;;;;;;;;;;;;:::o;3592:164::-;1271:12:4;:10;:12::i;:::-;1261:22;;:6;;;;;;;;;;:22;;;1253:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3639:15:0::1;3657:21;3639:39;;3688:11;;;;;;;;;;;:20;;:29;3709:7;3688:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;3732:17;3741:7;3732:17;;;;;;:::i;:::-;;;;;;;;1330:1:4;3592:164:0:o:0;1680:145:4:-;1271:12;:10;:12::i;:::-;1261:22;;:6;;;;;;;;;;:22;;;1253:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1786:1:::1;1749:40;;1770:6;::::0;::::1;;;;;;;;1749:40;;;;;;;;;;;;1816:1;1799:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1680:145::o:0;896:25:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1057:77:4:-;1095:7;1121:6;;;;;;;;;;;1114:13;;1057:77;:::o;868:22:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;841:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;967:29::-;;;;:::o;2353:567::-;2396:24;;:::i;:::-;2435:154;;;;;;;;2469:9;2435:154;;;;2553:1;2435:154;;;;2502:15;2435:154;;;2396:193;;2599:10;:22;2610:10;2599:22;;;;;;;;;;;;;;;2627:8;2599:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2804:29;2823:9;2804:14;;:18;;:29;;;;:::i;:::-;2787:14;:46;;;;2843:14;;:16;;;;;;;;;;;;;2891:10;2874:39;;;2903:9;2874:39;;;;;;:::i;:::-;;;;;;;;2353:567;:::o;1974:240:4:-;1271:12;:10;:12::i;:::-;1261:22;;:6;;;;;;;;;;:22;;;1253:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2082:1:::1;2062:22;;:8;:22;;;;2054:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2171:8;2142:38;;2163:6;::::0;::::1;;;;;;;;2142:38;;;;;;;;;;;;2199:8;2190:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;1974:240:::0;:::o;590:104:3:-;643:15;677:10;670:17;;590:104;:::o;874:176:5:-;932:7;951:9;967:1;963;:5;951:17;;991:1;986;:6;;978:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1042:1;1035:8;;;874:176;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:139:6:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:155::-;;244:6;231:20;222:29;;260:41;295:5;260:41;:::i;:::-;212:95;;;;:::o;313:260::-;;421:2;409:9;400:7;396:23;392:32;389:2;;;437:1;434;427:12;389:2;479:1;503:53;548:7;539:6;528:9;524:22;503:53;:::i;:::-;493:63;;451:115;379:194;;;;:::o;579:276::-;;695:2;683:9;674:7;670:23;666:32;663:2;;;711:1;708;701:12;663:2;753:1;777:61;830:7;821:6;810:9;806:22;777:61;:::i;:::-;767:71;;725:123;653:202;;;;:::o;861:275::-;;999:94;1089:3;1081:6;999:94;:::i;:::-;1125:4;1120:3;1116:14;1102:28;;989:147;;;;:::o;1142:142::-;1245:32;1271:5;1245:32;:::i;:::-;1240:3;1233:45;1223:61;;:::o;1290:118::-;1377:24;1395:5;1377:24;:::i;:::-;1372:3;1365:37;1355:53;;:::o;1482:924::-;;1678:78;1750:5;1678:78;:::i;:::-;1772:110;1875:6;1870:3;1772:110;:::i;:::-;1765:117;;1906:80;1980:5;1906:80;:::i;:::-;2009:7;2040:1;2025:356;2050:6;2047:1;2044:13;2025:356;;;2126:6;2120:13;2153:111;2260:3;2245:13;2153:111;:::i;:::-;2146:118;;2287:84;2364:6;2287:84;:::i;:::-;2277:94;;2085:296;2072:1;2069;2065:9;2060:14;;2025:356;;;2029:14;2397:3;2390:10;;1654:752;;;;;;;:::o;2412:364::-;;2528:39;2561:5;2528:39;:::i;:::-;2583:71;2647:6;2642:3;2583:71;:::i;:::-;2576:78;;2663:52;2708:6;2703:3;2696:4;2689:5;2685:16;2663:52;:::i;:::-;2740:29;2762:6;2740:29;:::i;:::-;2735:3;2731:39;2724:46;;2504:272;;;;;:::o;2846:682::-;2981:4;2976:3;2972:14;3069:4;3062:5;3058:16;3052:23;3088:63;3145:4;3140:3;3136:14;3122:12;3088:63;:::i;:::-;2996:165;3255:4;3248:5;3244:16;3238:23;3274:63;3331:4;3326:3;3322:14;3308:12;3274:63;:::i;:::-;3171:176;3429:4;3422:5;3418:16;3412:23;3448:63;3505:4;3500:3;3496:14;3482:12;3448:63;:::i;:::-;3357:164;2950:578;;;:::o;3534:108::-;3611:24;3629:5;3611:24;:::i;:::-;3606:3;3599:37;3589:53;;:::o;3648:118::-;3735:24;3753:5;3735:24;:::i;:::-;3730:3;3723:37;3713:53;;:::o;3772:222::-;;3903:2;3892:9;3888:18;3880:26;;3916:71;3984:1;3973:9;3969:17;3960:6;3916:71;:::i;:::-;3870:124;;;;:::o;4000:254::-;;4147:2;4136:9;4132:18;4124:26;;4160:87;4244:1;4233:9;4229:17;4220:6;4160:87;:::i;:::-;4114:140;;;;:::o;4260:469::-;;4489:2;4478:9;4474:18;4466:26;;4538:9;4532:4;4528:20;4524:1;4513:9;4509:17;4502:47;4566:156;4717:4;4708:6;4566:156;:::i;:::-;4558:164;;4456:273;;;;:::o;4735:313::-;;4886:2;4875:9;4871:18;4863:26;;4935:9;4929:4;4925:20;4921:1;4910:9;4906:17;4899:47;4963:78;5036:4;5027:6;4963:78;:::i;:::-;4955:86;;4853:195;;;;:::o;5054:222::-;;5185:2;5174:9;5170:18;5162:26;;5198:71;5266:1;5255:9;5251:17;5242:6;5198:71;:::i;:::-;5152:124;;;;:::o;5282:156::-;;5396:3;5388:11;;5426:4;5421:3;5417:14;5409:22;;5378:60;;;:::o;5444:138::-;;5569:5;5563:12;5553:22;;5542:40;;;:::o;5588:99::-;;5674:5;5668:12;5658:22;;5647:40;;;:::o;5693:137::-;;5819:4;5814:3;5810:14;5802:22;;5792:38;;;:::o;5836:208::-;;5993:6;5988:3;5981:19;6033:4;6028:3;6024:14;6009:29;;5971:73;;;;:::o;6050:169::-;;6168:6;6163:3;6156:19;6208:4;6203:3;6199:14;6184:29;;6146:73;;;;:::o;6225:96::-;;6291:24;6309:5;6291:24;:::i;:::-;6280:35;;6270:51;;;:::o;6327:104::-;;6401:24;6419:5;6401:24;:::i;:::-;6390:35;;6380:51;;;:::o;6437:126::-;;6514:42;6507:5;6503:54;6492:65;;6482:81;;;:::o;6569:77::-;;6635:5;6624:16;;6614:32;;;:::o;6652:307::-;6720:1;6730:113;6744:6;6741:1;6738:13;6730:113;;;6829:1;6824:3;6820:11;6814:18;6810:1;6805:3;6801:11;6794:39;6766:2;6763:1;6759:10;6754:15;;6730:113;;;6861:6;6858:1;6855:13;6852:2;;;6941:1;6932:6;6927:3;6923:16;6916:27;6852:2;6701:258;;;;:::o;6965:102::-;;7057:2;7053:7;7048:2;7041:5;7037:14;7033:28;7023:38;;7013:54;;;:::o;7073:122::-;7146:24;7164:5;7146:24;:::i;:::-;7139:5;7136:35;7126:2;;7185:1;7182;7175:12;7126:2;7116:79;:::o;7201:138::-;7282:32;7308:5;7282:32;:::i;:::-;7275:5;7272:43;7262:2;;7329:1;7326;7319:12;7262:2;7252:87;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.21 <0.8.0;\n\npragma experimental ABIEncoderV2;\n\nimport \"../node_modules/@openzeppelin/contracts/access/Ownable.sol\";\nimport \"../node_modules/@openzeppelin/contracts/math/SafeMath.sol\";\n\n/**\n    Notes : \n    1. as best practice separate deposit and withdraw actions\n    2. When testing a function thet has permissions, should test for when \n    the test condition is met and when it fails.\n    3. test if an event is emmited\n */\n\ncontract Fundraiser is Ownable {\n    using SafeMath for uint256;\n\n    struct Donation {\n        uint256 value;\n        uint256 conversionFactor;\n        uint256 date;\n    }\n\n    mapping(address => Donation[]) private _donations;\n    event DonationReceived(address indexed donor, uint256 value);\n    event Withdraw(uint256 amount);\n    string public name;\n    string public website;\n    string public imageURL;\n    string public description;\n    address payable public beneficiary;\n    uint256 public totalDonations;\n    uint256 public donationsCount;\n\n    constructor(\n        string memory _name,\n        string memory _website,\n        string memory _imageURL,\n        string memory _description,\n        address payable _beneficiary,\n        address _custodian\n    ) {\n        name = _name;\n        website = _website;\n        imageURL = _imageURL;\n        description = _description;\n        beneficiary = _beneficiary;\n        // the address of the custodian is associated\n        // with the manager of the fundraiser assuming\n        // that the beneficiary use a service like coinbase\n        // in order to be able to sell received ether and\n        // does not have access to his private key in order to\n        // be able to withdraw\n        //*******************\n        // this function is defined in the Ownable contract of openzeppelin\n        // the custodian will be the owner of the contract\n        transferOwnership(_custodian);\n    }\n\n    // the Fundraiser manager can change the benefiaciary address\n    // in case he enetered a wrong one or the beneficiary decides to\n    // switch the exchange he is using\n    function setBeneficiary(address payable _beneficiary) public onlyOwner {\n        beneficiary = _beneficiary;\n    }\n\n    function myDonationsCount() public view returns (uint256) {\n        return _donations[msg.sender].length;\n    }\n\n    function donate() public payable {\n        Donation memory donation =\n            Donation({\n                value: msg.value,\n                date: block.timestamp,\n                conversionFactor: 2 // pass it in param\n            });\n        _donations[msg.sender].push(donation);\n        // using safeMath since there is no limit to the\n        // amount that a donor can donate nor on the number\n        // of donations\n        totalDonations = totalDonations.add(msg.value);\n        donationsCount++;\n        emit DonationReceived(msg.sender, msg.value);\n    }\n\n    // function myDonations()\n    //     external\n    //     view\n    //     returns (uint256[] memory values, uint256[] memory dates)\n    // {\n    //     uint256 count = myDonationsCount();\n    //     values = new uint256[](count);\n    //     dates = new uint256[](count);\n    //     Donation[] storage donations = _donations[msg.sender];\n    //     for (uint256 i = 0; i < count; i++) {\n    //         values[i] = donations[i].value;\n    //         dates[i] = donations[i].date;\n    //     }\n    //     return (values, dates);\n    // }\n\n    function myDonations() external view returns (Donation[] memory donations) {\n        return _donations[msg.sender];\n    }\n\n    function withdraw() public onlyOwner {\n        uint256 balance = address(this).balance;\n        beneficiary.transfer(balance);\n        emit Withdraw(balance);\n    }\n\n    // simulate anonymous donations\n    // the donation will not really be anonymous\n    // since the transaction will be recorded on the blockchain\n    // with the address of the emitter unless the adress is\n    // set up to make tracing it more difficult\n    receive() external payable {\n        totalDonations += msg.value;\n        donationsCount++;\n    }\n}\n",
  "sourcePath": "/home/wissal/Documents/dev-workspace/solidity/handsOnSmartContracts/fundraiser2/contracts/Fundraiser.sol",
  "ast": {
    "absolutePath": "/home/wissal/Documents/dev-workspace/solidity/handsOnSmartContracts/fundraiser2/contracts/Fundraiser.sol",
    "exportedSymbols": {
      "Context": [
        390
      ],
      "Fundraiser": [
        199
      ],
      "Ownable": [
        499
      ],
      "SafeMath": [
        695
      ]
    },
    "id": 200,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "66:33:0"
      },
      {
        "absolutePath": "/home/wissal/Documents/dev-workspace/solidity/handsOnSmartContracts/fundraiser2/node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 200,
        "sourceUnit": 500,
        "src": "101:68:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/wissal/Documents/dev-workspace/solidity/handsOnSmartContracts/fundraiser2/node_modules/@openzeppelin/contracts/math/SafeMath.sol",
        "file": "../node_modules/@openzeppelin/contracts/math/SafeMath.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 200,
        "sourceUnit": 696,
        "src": "170:67:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 499,
              "src": "505:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$499",
                "typeString": "contract Ownable"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "505:7:0"
          }
        ],
        "contractDependencies": [
          390,
          499
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 5,
          "nodeType": "StructuredDocumentation",
          "src": "239:241:0",
          "text": "Notes : \n1. as best practice separate deposit and withdraw actions\n2. When testing a function thet has permissions, should test for when \nthe test condition is met and when it fails.\n3. test if an event is emmited"
        },
        "fullyImplemented": true,
        "id": 199,
        "linearizedBaseContracts": [
          199,
          499,
          390
        ],
        "name": "Fundraiser",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 10,
            "libraryName": {
              "id": 8,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 695,
              "src": "525:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$695",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "519:27:0",
            "typeName": {
              "id": 9,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "538:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Fundraiser.Donation",
            "id": 17,
            "members": [
              {
                "constant": false,
                "id": 12,
                "mutability": "mutable",
                "name": "value",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "578:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 11,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "578:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "mutability": "mutable",
                "name": "conversionFactor",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "601:24:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 13,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "601:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "mutability": "mutable",
                "name": "date",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "635:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "635:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Donation",
            "nodeType": "StructDefinition",
            "scope": 199,
            "src": "552:102:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 22,
            "mutability": "mutable",
            "name": "_donations",
            "nodeType": "VariableDeclaration",
            "scope": 199,
            "src": "660:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Donation_$17_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct Fundraiser.Donation[])"
            },
            "typeName": {
              "id": 21,
              "keyType": {
                "id": 18,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "668:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "660:30:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Donation_$17_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct Fundraiser.Donation[])"
              },
              "valueType": {
                "baseType": {
                  "id": 19,
                  "name": "Donation",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 17,
                  "src": "679:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Donation_$17_storage_ptr",
                    "typeString": "struct Fundraiser.Donation"
                  }
                },
                "id": 20,
                "nodeType": "ArrayTypeName",
                "src": "679:10:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Donation_$17_storage_$dyn_storage_ptr",
                  "typeString": "struct Fundraiser.Donation[]"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 28,
            "name": "DonationReceived",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "donor",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "738:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "738:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "761:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "761:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "737:38:0"
            },
            "src": "715:61:0"
          },
          {
            "anonymous": false,
            "id": 32,
            "name": "Withdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "796:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "796:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "795:16:0"
            },
            "src": "781:31:0"
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 34,
            "mutability": "mutable",
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 199,
            "src": "817:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 33,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "817:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "beb0a416",
            "id": 36,
            "mutability": "mutable",
            "name": "website",
            "nodeType": "VariableDeclaration",
            "scope": 199,
            "src": "841:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 35,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "841:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b90497e0",
            "id": 38,
            "mutability": "mutable",
            "name": "imageURL",
            "nodeType": "VariableDeclaration",
            "scope": 199,
            "src": "868:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 37,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "868:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7284e416",
            "id": 40,
            "mutability": "mutable",
            "name": "description",
            "nodeType": "VariableDeclaration",
            "scope": 199,
            "src": "896:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 39,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "896:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "38af3eed",
            "id": 42,
            "mutability": "mutable",
            "name": "beneficiary",
            "nodeType": "VariableDeclaration",
            "scope": 199,
            "src": "927:34:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 41,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "927:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "de2ed893",
            "id": 44,
            "mutability": "mutable",
            "name": "totalDonations",
            "nodeType": "VariableDeclaration",
            "scope": 199,
            "src": "967:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 43,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "967:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1f522595",
            "id": 46,
            "mutability": "mutable",
            "name": "donationsCount",
            "nodeType": "VariableDeclaration",
            "scope": 199,
            "src": "1002:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 45,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1002:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 85,
              "nodeType": "Block",
              "src": "1252:684:0",
              "statements": [
                {
                  "expression": {
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "1262:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 62,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "1269:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1262:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "1262:12:0"
                },
                {
                  "expression": {
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 65,
                      "name": "website",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "1284:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 66,
                      "name": "_website",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "1294:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1284:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "1284:18:0"
                },
                {
                  "expression": {
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 69,
                      "name": "imageURL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "1312:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 70,
                      "name": "_imageURL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "1323:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1312:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 72,
                  "nodeType": "ExpressionStatement",
                  "src": "1312:20:0"
                },
                {
                  "expression": {
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 73,
                      "name": "description",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "1342:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 74,
                      "name": "_description",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "1356:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1342:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "1342:26:0"
                },
                {
                  "expression": {
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 77,
                      "name": "beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "1378:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 78,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "1392:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1378:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 80,
                  "nodeType": "ExpressionStatement",
                  "src": "1378:26:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82,
                        "name": "_custodian",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1918:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 81,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 498,
                      "src": "1900:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1900:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "1900:29:0"
                }
              ]
            },
            "id": 86,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "1059:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1059:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50,
                  "mutability": "mutable",
                  "name": "_website",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "1088:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1088:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52,
                  "mutability": "mutable",
                  "name": "_imageURL",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "1120:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1120:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "mutability": "mutable",
                  "name": "_description",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "1153:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1153:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "mutability": "mutable",
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "1189:28:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1189:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "mutability": "mutable",
                  "name": "_custodian",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "1227:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1227:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1049:202:0"
            },
            "returnParameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1252:0:0"
            },
            "scope": 199,
            "src": "1038:898:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 97,
              "nodeType": "Block",
              "src": "2187:43:0",
              "statements": [
                {
                  "expression": {
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 93,
                      "name": "beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "2197:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 94,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "2211:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2197:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 96,
                  "nodeType": "ExpressionStatement",
                  "src": "2197:26:0"
                }
              ]
            },
            "functionSelector": "1c31f710",
            "id": 98,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 91,
                "modifierName": {
                  "id": 90,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 448,
                  "src": "2177:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2177:9:0"
              }
            ],
            "name": "setBeneficiary",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "2140:28:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2140:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2139:30:0"
            },
            "returnParameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2187:0:0"
            },
            "scope": 199,
            "src": "2116:114:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 109,
              "nodeType": "Block",
              "src": "2294:53:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 103,
                        "name": "_donations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "2311:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Donation_$17_storage_$dyn_storage_$",
                          "typeString": "mapping(address => struct Fundraiser.Donation storage ref[] storage ref)"
                        }
                      },
                      "id": 106,
                      "indexExpression": {
                        "expression": {
                          "id": 104,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2322:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2322:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2311:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Donation_$17_storage_$dyn_storage",
                        "typeString": "struct Fundraiser.Donation storage ref[] storage ref"
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2311:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 102,
                  "id": 108,
                  "nodeType": "Return",
                  "src": "2304:36:0"
                }
              ]
            },
            "functionSelector": "0180b97c",
            "id": 110,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "myDonationsCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2261:2:0"
            },
            "returnParameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "2285:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2285:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2284:9:0"
            },
            "scope": 199,
            "src": "2236:111:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 149,
              "nodeType": "Block",
              "src": "2386:534:0",
              "statements": [
                {
                  "assignments": [
                    114
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 114,
                      "mutability": "mutable",
                      "name": "donation",
                      "nodeType": "VariableDeclaration",
                      "scope": 149,
                      "src": "2396:24:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Donation_$17_memory_ptr",
                        "typeString": "struct Fundraiser.Donation"
                      },
                      "typeName": {
                        "id": 113,
                        "name": "Donation",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 17,
                        "src": "2396:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Donation_$17_storage_ptr",
                          "typeString": "struct Fundraiser.Donation"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 122,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 116,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2469:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2469:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 118,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "2502:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2502:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2553:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 115,
                      "name": "Donation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "2435:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Donation_$17_storage_ptr_$",
                        "typeString": "type(struct Fundraiser.Donation storage pointer)"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "value",
                      "date",
                      "conversionFactor"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "2435:154:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Donation_$17_memory_ptr",
                      "typeString": "struct Fundraiser.Donation memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2396:193:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 128,
                        "name": "donation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 114,
                        "src": "2627:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Donation_$17_memory_ptr",
                          "typeString": "struct Fundraiser.Donation memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Donation_$17_memory_ptr",
                          "typeString": "struct Fundraiser.Donation memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 123,
                          "name": "_donations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "2599:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Donation_$17_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Fundraiser.Donation storage ref[] storage ref)"
                          }
                        },
                        "id": 126,
                        "indexExpression": {
                          "expression": {
                            "id": 124,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2610:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2610:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2599:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Donation_$17_storage_$dyn_storage",
                          "typeString": "struct Fundraiser.Donation storage ref[] storage ref"
                        }
                      },
                      "id": 127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2599:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Donation_$17_storage_$returns$__$",
                        "typeString": "function (struct Fundraiser.Donation storage ref)"
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2599:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "2599:37:0"
                },
                {
                  "expression": {
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 131,
                      "name": "totalDonations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "2787:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 134,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2823:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2823:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 132,
                          "name": "totalDonations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "2804:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 528,
                        "src": "2804:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2804:29:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2787:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "2787:46:0"
                },
                {
                  "expression": {
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2843:16:0",
                    "subExpression": {
                      "id": 139,
                      "name": "donationsCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "2843:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "2843:16:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 143,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2891:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2891:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 145,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2903:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2903:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 142,
                      "name": "DonationReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "2874:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2874:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 148,
                  "nodeType": "EmitStatement",
                  "src": "2869:44:0"
                }
              ]
            },
            "functionSelector": "ed88c68e",
            "id": 150,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "donate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2368:2:0"
            },
            "returnParameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2386:0:0"
            },
            "scope": 199,
            "src": "2353:567:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 161,
              "nodeType": "Block",
              "src": "3540:46:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 156,
                      "name": "_donations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "3557:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Donation_$17_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct Fundraiser.Donation storage ref[] storage ref)"
                      }
                    },
                    "id": 159,
                    "indexExpression": {
                      "expression": {
                        "id": 157,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3568:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3568:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3557:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Donation_$17_storage_$dyn_storage",
                      "typeString": "struct Fundraiser.Donation storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 155,
                  "id": 160,
                  "nodeType": "Return",
                  "src": "3550:29:0"
                }
              ]
            },
            "functionSelector": "1a57f7b4",
            "id": 162,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "myDonations",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3485:2:0"
            },
            "returnParameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 154,
                  "mutability": "mutable",
                  "name": "donations",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "3511:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Donation_$17_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Fundraiser.Donation[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 152,
                      "name": "Donation",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 17,
                      "src": "3511:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Donation_$17_storage_ptr",
                        "typeString": "struct Fundraiser.Donation"
                      }
                    },
                    "id": 153,
                    "nodeType": "ArrayTypeName",
                    "src": "3511:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Donation_$17_storage_$dyn_storage_ptr",
                      "typeString": "struct Fundraiser.Donation[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3510:29:0"
            },
            "scope": 199,
            "src": "3465:121:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 185,
              "nodeType": "Block",
              "src": "3629:127:0",
              "statements": [
                {
                  "assignments": [
                    168
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 168,
                      "mutability": "mutable",
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 185,
                      "src": "3639:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 167,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3639:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 174,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 171,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "3665:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Fundraiser_$199",
                            "typeString": "contract Fundraiser"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Fundraiser_$199",
                            "typeString": "contract Fundraiser"
                          }
                        ],
                        "id": 170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3657:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 169,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3657:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3657:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "3657:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3639:39:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 178,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 168,
                        "src": "3709:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 175,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "3688:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "3688:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3688:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 180,
                  "nodeType": "ExpressionStatement",
                  "src": "3688:29:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 182,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 168,
                        "src": "3741:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 181,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "3732:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3732:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 184,
                  "nodeType": "EmitStatement",
                  "src": "3727:22:0"
                }
              ]
            },
            "functionSelector": "3ccfd60b",
            "id": 186,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 165,
                "modifierName": {
                  "id": 164,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 448,
                  "src": "3619:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3619:9:0"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3609:2:0"
            },
            "returnParameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3629:0:0"
            },
            "scope": 199,
            "src": "3592:164:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 197,
              "nodeType": "Block",
              "src": "4046:70:0",
              "statements": [
                {
                  "expression": {
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 189,
                      "name": "totalDonations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "4056:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 190,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4074:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "4074:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4056:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 193,
                  "nodeType": "ExpressionStatement",
                  "src": "4056:27:0"
                },
                {
                  "expression": {
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4093:16:0",
                    "subExpression": {
                      "id": 194,
                      "name": "donationsCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "4093:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "4093:16:0"
                }
              ]
            },
            "id": 198,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4026:2:0"
            },
            "returnParameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4046:0:0"
            },
            "scope": 199,
            "src": "4019:97:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 200,
        "src": "482:3636:0"
      }
    ],
    "src": "32:4087:0"
  },
  "legacyAST": {
    "absolutePath": "/home/wissal/Documents/dev-workspace/solidity/handsOnSmartContracts/fundraiser2/contracts/Fundraiser.sol",
    "exportedSymbols": {
      "Context": [
        390
      ],
      "Fundraiser": [
        199
      ],
      "Ownable": [
        499
      ],
      "SafeMath": [
        695
      ]
    },
    "id": 200,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "66:33:0"
      },
      {
        "absolutePath": "/home/wissal/Documents/dev-workspace/solidity/handsOnSmartContracts/fundraiser2/node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 200,
        "sourceUnit": 500,
        "src": "101:68:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/wissal/Documents/dev-workspace/solidity/handsOnSmartContracts/fundraiser2/node_modules/@openzeppelin/contracts/math/SafeMath.sol",
        "file": "../node_modules/@openzeppelin/contracts/math/SafeMath.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 200,
        "sourceUnit": 696,
        "src": "170:67:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 499,
              "src": "505:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$499",
                "typeString": "contract Ownable"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "505:7:0"
          }
        ],
        "contractDependencies": [
          390,
          499
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 5,
          "nodeType": "StructuredDocumentation",
          "src": "239:241:0",
          "text": "Notes : \n1. as best practice separate deposit and withdraw actions\n2. When testing a function thet has permissions, should test for when \nthe test condition is met and when it fails.\n3. test if an event is emmited"
        },
        "fullyImplemented": true,
        "id": 199,
        "linearizedBaseContracts": [
          199,
          499,
          390
        ],
        "name": "Fundraiser",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 10,
            "libraryName": {
              "id": 8,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 695,
              "src": "525:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$695",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "519:27:0",
            "typeName": {
              "id": 9,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "538:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Fundraiser.Donation",
            "id": 17,
            "members": [
              {
                "constant": false,
                "id": 12,
                "mutability": "mutable",
                "name": "value",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "578:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 11,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "578:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "mutability": "mutable",
                "name": "conversionFactor",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "601:24:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 13,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "601:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "mutability": "mutable",
                "name": "date",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "635:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "635:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Donation",
            "nodeType": "StructDefinition",
            "scope": 199,
            "src": "552:102:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 22,
            "mutability": "mutable",
            "name": "_donations",
            "nodeType": "VariableDeclaration",
            "scope": 199,
            "src": "660:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Donation_$17_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct Fundraiser.Donation[])"
            },
            "typeName": {
              "id": 21,
              "keyType": {
                "id": 18,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "668:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "660:30:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Donation_$17_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct Fundraiser.Donation[])"
              },
              "valueType": {
                "baseType": {
                  "id": 19,
                  "name": "Donation",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 17,
                  "src": "679:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Donation_$17_storage_ptr",
                    "typeString": "struct Fundraiser.Donation"
                  }
                },
                "id": 20,
                "nodeType": "ArrayTypeName",
                "src": "679:10:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Donation_$17_storage_$dyn_storage_ptr",
                  "typeString": "struct Fundraiser.Donation[]"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 28,
            "name": "DonationReceived",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "donor",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "738:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "738:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "761:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "761:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "737:38:0"
            },
            "src": "715:61:0"
          },
          {
            "anonymous": false,
            "id": 32,
            "name": "Withdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "796:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "796:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "795:16:0"
            },
            "src": "781:31:0"
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 34,
            "mutability": "mutable",
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 199,
            "src": "817:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 33,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "817:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "beb0a416",
            "id": 36,
            "mutability": "mutable",
            "name": "website",
            "nodeType": "VariableDeclaration",
            "scope": 199,
            "src": "841:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 35,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "841:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b90497e0",
            "id": 38,
            "mutability": "mutable",
            "name": "imageURL",
            "nodeType": "VariableDeclaration",
            "scope": 199,
            "src": "868:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 37,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "868:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7284e416",
            "id": 40,
            "mutability": "mutable",
            "name": "description",
            "nodeType": "VariableDeclaration",
            "scope": 199,
            "src": "896:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 39,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "896:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "38af3eed",
            "id": 42,
            "mutability": "mutable",
            "name": "beneficiary",
            "nodeType": "VariableDeclaration",
            "scope": 199,
            "src": "927:34:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 41,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "927:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "de2ed893",
            "id": 44,
            "mutability": "mutable",
            "name": "totalDonations",
            "nodeType": "VariableDeclaration",
            "scope": 199,
            "src": "967:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 43,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "967:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1f522595",
            "id": 46,
            "mutability": "mutable",
            "name": "donationsCount",
            "nodeType": "VariableDeclaration",
            "scope": 199,
            "src": "1002:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 45,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1002:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 85,
              "nodeType": "Block",
              "src": "1252:684:0",
              "statements": [
                {
                  "expression": {
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "1262:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 62,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "1269:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1262:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "1262:12:0"
                },
                {
                  "expression": {
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 65,
                      "name": "website",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "1284:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 66,
                      "name": "_website",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "1294:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1284:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "1284:18:0"
                },
                {
                  "expression": {
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 69,
                      "name": "imageURL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "1312:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 70,
                      "name": "_imageURL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "1323:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1312:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 72,
                  "nodeType": "ExpressionStatement",
                  "src": "1312:20:0"
                },
                {
                  "expression": {
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 73,
                      "name": "description",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "1342:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 74,
                      "name": "_description",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "1356:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1342:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "1342:26:0"
                },
                {
                  "expression": {
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 77,
                      "name": "beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "1378:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 78,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "1392:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1378:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 80,
                  "nodeType": "ExpressionStatement",
                  "src": "1378:26:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82,
                        "name": "_custodian",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1918:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 81,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 498,
                      "src": "1900:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1900:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "1900:29:0"
                }
              ]
            },
            "id": 86,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "1059:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1059:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50,
                  "mutability": "mutable",
                  "name": "_website",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "1088:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1088:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52,
                  "mutability": "mutable",
                  "name": "_imageURL",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "1120:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1120:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "mutability": "mutable",
                  "name": "_description",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "1153:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1153:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "mutability": "mutable",
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "1189:28:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1189:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "mutability": "mutable",
                  "name": "_custodian",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "1227:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1227:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1049:202:0"
            },
            "returnParameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1252:0:0"
            },
            "scope": 199,
            "src": "1038:898:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 97,
              "nodeType": "Block",
              "src": "2187:43:0",
              "statements": [
                {
                  "expression": {
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 93,
                      "name": "beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "2197:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 94,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "2211:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2197:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 96,
                  "nodeType": "ExpressionStatement",
                  "src": "2197:26:0"
                }
              ]
            },
            "functionSelector": "1c31f710",
            "id": 98,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 91,
                "modifierName": {
                  "id": 90,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 448,
                  "src": "2177:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2177:9:0"
              }
            ],
            "name": "setBeneficiary",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "2140:28:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2140:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2139:30:0"
            },
            "returnParameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2187:0:0"
            },
            "scope": 199,
            "src": "2116:114:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 109,
              "nodeType": "Block",
              "src": "2294:53:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 103,
                        "name": "_donations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "2311:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Donation_$17_storage_$dyn_storage_$",
                          "typeString": "mapping(address => struct Fundraiser.Donation storage ref[] storage ref)"
                        }
                      },
                      "id": 106,
                      "indexExpression": {
                        "expression": {
                          "id": 104,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2322:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2322:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2311:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Donation_$17_storage_$dyn_storage",
                        "typeString": "struct Fundraiser.Donation storage ref[] storage ref"
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2311:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 102,
                  "id": 108,
                  "nodeType": "Return",
                  "src": "2304:36:0"
                }
              ]
            },
            "functionSelector": "0180b97c",
            "id": 110,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "myDonationsCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2261:2:0"
            },
            "returnParameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "2285:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2285:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2284:9:0"
            },
            "scope": 199,
            "src": "2236:111:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 149,
              "nodeType": "Block",
              "src": "2386:534:0",
              "statements": [
                {
                  "assignments": [
                    114
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 114,
                      "mutability": "mutable",
                      "name": "donation",
                      "nodeType": "VariableDeclaration",
                      "scope": 149,
                      "src": "2396:24:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Donation_$17_memory_ptr",
                        "typeString": "struct Fundraiser.Donation"
                      },
                      "typeName": {
                        "id": 113,
                        "name": "Donation",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 17,
                        "src": "2396:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Donation_$17_storage_ptr",
                          "typeString": "struct Fundraiser.Donation"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 122,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 116,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2469:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2469:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 118,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "2502:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2502:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2553:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 115,
                      "name": "Donation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "2435:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Donation_$17_storage_ptr_$",
                        "typeString": "type(struct Fundraiser.Donation storage pointer)"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "value",
                      "date",
                      "conversionFactor"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "2435:154:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Donation_$17_memory_ptr",
                      "typeString": "struct Fundraiser.Donation memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2396:193:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 128,
                        "name": "donation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 114,
                        "src": "2627:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Donation_$17_memory_ptr",
                          "typeString": "struct Fundraiser.Donation memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Donation_$17_memory_ptr",
                          "typeString": "struct Fundraiser.Donation memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 123,
                          "name": "_donations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "2599:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Donation_$17_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Fundraiser.Donation storage ref[] storage ref)"
                          }
                        },
                        "id": 126,
                        "indexExpression": {
                          "expression": {
                            "id": 124,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2610:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2610:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2599:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Donation_$17_storage_$dyn_storage",
                          "typeString": "struct Fundraiser.Donation storage ref[] storage ref"
                        }
                      },
                      "id": 127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2599:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Donation_$17_storage_$returns$__$",
                        "typeString": "function (struct Fundraiser.Donation storage ref)"
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2599:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "2599:37:0"
                },
                {
                  "expression": {
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 131,
                      "name": "totalDonations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "2787:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 134,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2823:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2823:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 132,
                          "name": "totalDonations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "2804:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 528,
                        "src": "2804:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2804:29:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2787:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "2787:46:0"
                },
                {
                  "expression": {
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2843:16:0",
                    "subExpression": {
                      "id": 139,
                      "name": "donationsCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "2843:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "2843:16:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 143,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2891:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2891:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 145,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2903:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2903:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 142,
                      "name": "DonationReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "2874:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2874:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 148,
                  "nodeType": "EmitStatement",
                  "src": "2869:44:0"
                }
              ]
            },
            "functionSelector": "ed88c68e",
            "id": 150,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "donate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2368:2:0"
            },
            "returnParameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2386:0:0"
            },
            "scope": 199,
            "src": "2353:567:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 161,
              "nodeType": "Block",
              "src": "3540:46:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 156,
                      "name": "_donations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "3557:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Donation_$17_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct Fundraiser.Donation storage ref[] storage ref)"
                      }
                    },
                    "id": 159,
                    "indexExpression": {
                      "expression": {
                        "id": 157,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3568:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3568:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3557:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Donation_$17_storage_$dyn_storage",
                      "typeString": "struct Fundraiser.Donation storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 155,
                  "id": 160,
                  "nodeType": "Return",
                  "src": "3550:29:0"
                }
              ]
            },
            "functionSelector": "1a57f7b4",
            "id": 162,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "myDonations",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3485:2:0"
            },
            "returnParameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 154,
                  "mutability": "mutable",
                  "name": "donations",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "3511:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Donation_$17_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Fundraiser.Donation[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 152,
                      "name": "Donation",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 17,
                      "src": "3511:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Donation_$17_storage_ptr",
                        "typeString": "struct Fundraiser.Donation"
                      }
                    },
                    "id": 153,
                    "nodeType": "ArrayTypeName",
                    "src": "3511:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Donation_$17_storage_$dyn_storage_ptr",
                      "typeString": "struct Fundraiser.Donation[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3510:29:0"
            },
            "scope": 199,
            "src": "3465:121:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 185,
              "nodeType": "Block",
              "src": "3629:127:0",
              "statements": [
                {
                  "assignments": [
                    168
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 168,
                      "mutability": "mutable",
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 185,
                      "src": "3639:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 167,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3639:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 174,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 171,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "3665:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Fundraiser_$199",
                            "typeString": "contract Fundraiser"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Fundraiser_$199",
                            "typeString": "contract Fundraiser"
                          }
                        ],
                        "id": 170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3657:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 169,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3657:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3657:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "3657:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3639:39:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 178,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 168,
                        "src": "3709:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 175,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "3688:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "3688:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3688:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 180,
                  "nodeType": "ExpressionStatement",
                  "src": "3688:29:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 182,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 168,
                        "src": "3741:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 181,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "3732:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3732:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 184,
                  "nodeType": "EmitStatement",
                  "src": "3727:22:0"
                }
              ]
            },
            "functionSelector": "3ccfd60b",
            "id": 186,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 165,
                "modifierName": {
                  "id": 164,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 448,
                  "src": "3619:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3619:9:0"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3609:2:0"
            },
            "returnParameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3629:0:0"
            },
            "scope": 199,
            "src": "3592:164:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 197,
              "nodeType": "Block",
              "src": "4046:70:0",
              "statements": [
                {
                  "expression": {
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 189,
                      "name": "totalDonations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "4056:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 190,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4074:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "4074:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4056:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 193,
                  "nodeType": "ExpressionStatement",
                  "src": "4056:27:0"
                },
                {
                  "expression": {
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4093:16:0",
                    "subExpression": {
                      "id": 194,
                      "name": "donationsCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "4093:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "4093:16:0"
                }
              ]
            },
            "id": 198,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4026:2:0"
            },
            "returnParameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4046:0:0"
            },
            "scope": 199,
            "src": "4019:97:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 200,
        "src": "482:3636:0"
      }
    ],
    "src": "32:4087:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.4+commit.3f05b770.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.1",
  "updatedAt": "2021-01-08T21:33:37.433Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Notes :  1. as best practice separate deposit and withdraw actions 2. When testing a function thet has permissions, should test for when  the test condition is met and when it fails. 3. test if an event is emmited",
    "version": 1
  }
}